# -*- coding: utf-8 -*-
"""
100 Days of Code The Complete Python Pro Bootcamp for 2023
Day 7 - Beginner - Hangman

Code Challenge: Keeping Track of the Player's Lives

Created on Thu Nov  7 18:29:08 2024
"""

"""
#TODO-1: - Create a variable called 'lives' to keep track of the number of lives left. 
#Set 'lives' to equal 6.

#TODO-2: - If guess is not a letter in the chosen_word, then reduce 'lives' by 1. 
If lives goes down to 0 then the game should stop and it should print "You lose."
    
#TODO-3: - print the ASCII art from 'stages' that corresponds to the current number of 'lives' the user has remaining.    
"""


import random

stages = ['''
  +---+
  |   |
  O   |
 /|\  |
 / \  |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|\  |
 /    |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|\  |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|   |
      |
      |
=========''', '''
  +---+
  |   |
  O   |
  |   |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
      |
      |
      |
=========
''', '''
  +---+
  |   |
      |
      |
      |
      |
=========
''']


import random

word_list = ["aardvark", "baboon", "camel"]
chosen_word = random.choice(word_list)
word_length = len(chosen_word)

display = []
end_of_game = False
lives = 6

for character in range(word_length):
    display.append("_")

while end_of_game == False:
    guess = input("Guess a letter: ").lower()

    # Check if letter is in chosen_word
    for position in range(word_length):
        letter = chosen_word[position]

        if letter == guess:
            display[position] = letter
            #print(display)

    #Penalize the Player for incorrect answers
    if guess not in chosen_word:
        lives -= 1
        print("\n\n\n\n\n")
        print(stages[lives])

    #Check is a user has run out of life.
    if lives == 0:
        end_of_game = True
        print("Sorry.  You lose.")
        break

    #Show remaining spaces        
    print(f"{' '.join(display)}")

    #Check if user has got all letters.
    if "_" not in display:
        end_of_game = True
        print(f'\nCongratulations! The word was {chosen_word}. You win!')  

